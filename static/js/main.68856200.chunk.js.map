{"version":3,"sources":["reducers/reducer.ts","store/configureStore.tsx","constants.js","components/Header.tsx","components/Card.tsx","components/CardList.tsx","actions/action.ts","components/SearchBox.tsx","components/Scroll.tsx","components/ErrorBoundry.tsx","containers/App.tsx","serviceWorker.js","index.tsx"],"names":["initialSearchField","searchField","initialCats","cats","isPending","error","rootReducer","combineReducers","searchCats","state","action","type","payload","requestCats","store","createStore","applyMiddleware","thunk","Header","className","Card","id","name","email","src","alt","connect","dispatch","fetch","then","response","json","requestCatsSuccess","catch","requestCatsFailed","useEffect","filterCats","filter","cat","toLowerCase","includes","map","key","onSearchChange","e","target","value","aria-label","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundry","hasError","info","this","setState","React","Component","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.68856200.chunk.js","sourcesContent":["//-- Constants --//\nimport {\n  CHANGE_SEARCH_FIELD,\n  REQUEST_CATS_PENDING,\n  REQUEST_CATS_SUCCESS,\n  REQUEST_CATS_FAILED\n} from \"../constants\";\n\nimport { ActionTypes } from \"../types/action\";\n\n//----------------------------------------------------//\n//----------------------------------------------------//\n\ninterface searchField {\n  searchField: string;\n}\n\nconst initialSearchField: searchField = {\n  searchField: \"\"\n};\n\nexport const searchCats = (\n  state = initialSearchField,\n  action: ActionTypes\n): searchField => {\n  switch (action.type) {\n    case CHANGE_SEARCH_FIELD:\n      return {\n        ...state,\n        searchField: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\n//----------------------------------------------------//\n\ninterface cats {\n  cats: [];\n  isPending: boolean;\n  error: string;\n}\n\nconst initialCats: cats = {\n  cats: [],\n  isPending: false,\n  error: \"\"\n};\n\nexport const requestCats = (state = initialCats, action: ActionTypes) => {\n  switch (action.type) {\n    case REQUEST_CATS_PENDING:\n      return {\n        ...state,\n        isPending: true\n      };\n    case REQUEST_CATS_SUCCESS:\n      return {\n        ...state,\n        cats: action.payload,\n        isPending: false\n      };\n    case REQUEST_CATS_FAILED:\n      return {\n        ...state,\n        error: action.payload,\n        isPending: false\n      };\n    default:\n      return state;\n  }\n};\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\n\nimport thunk from \"redux-thunk\";\n\n//-- Reducer --//\nimport { searchCats, requestCats } from \"../reducers/reducer\";\n\n//----------------------------------------------------//\n//----------------------------------------------------//\n\nconst rootReducer = combineReducers({ searchCats, requestCats });\n\nexport type AppState = ReturnType<typeof rootReducer>;\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk));","export const CHANGE_SEARCH_FIELD = \"CHANGE_SEARCH_FIELD\";\n\nexport const REQUEST_CATS_PENDING = \"REQUEST_CATS_PENDING\";\nexport const REQUEST_CATS_SUCCESS = \"REQUEST_CATS_SUCCESS\";\nexport const REQUEST_CATS_FAILED = \"REQUEST_CATS_FAILED\";\n","import React from \"react\";\n\n//----------------------------------------------------//\n//----------------------------------------------------//\n\nconst Header = () => <h1 className=\"f1\">Cat Friends</h1>;\n\nexport default Header;\n","import React from \"react\";\n\n//----------------------------------------------------//\n//----------------------------------------------------//\n\ninterface Props {\n  id: number;\n  name: string;\n  email: string;\n}\n\nconst Card: React.FC<Props> = ({ id, name, email }) => (\n  <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\n    <img src={`https://robohash.org/${id}?set=set4&size=250x250`} alt=\"cat\" />\n    <div>\n      <h2>{name}</h2>\n      <p>{email}</p>\n    </div>\n  </div>\n);\n\nexport default Card;\n","import React, { useEffect } from \"react\";\n\nimport { connect } from \"react-redux\";\n\n//-- Actions --//\nimport { requestCats } from \"../actions/action\";\n\n//-- Components --//\nimport Card from \"./Card\";\n\n//-- Type --//\nimport { AppState } from \"../store/configureStore\";\nimport { ThunkDispatch } from \"redux-thunk\";\n\n//----------------------------------------------------//\n//----------------------------------------------------//\n\nconst mapStateToProps = (state: AppState) => ({\n  cats: state.requestCats.cats,\n  isPending: state.requestCats.isPending,\n  searchField: state.searchCats.searchField\n});\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<any, any, any>) => ({\n  requestCats: () => dispatch(requestCats())\n});\n\ninterface Props {\n  cats: any[]\n  isPending: boolean;\n  searchField: string;\n  requestCats: () => void;\n}\n\nconst CardList: React.SFC<Props> = ({\n  cats,\n  isPending,\n  searchField,\n  requestCats\n}) => {\n  useEffect(() => {\n    requestCats();\n  }, [requestCats]);\n\n  const filterCats = cats.filter(cat =>\n    cat.name.toLowerCase().includes(searchField.toLowerCase())\n  );\n\n  return isPending ? (\n    <h1 className=\"tc\">Loading ...</h1>\n  ) : (\n    <div>\n      {filterCats.map(cat => (\n        <Card key={cat.id} {...cat} />\n      ))}\n    </div>\n  );\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CardList);\n","//-- Constants --//\nimport {\n  CHANGE_SEARCH_FIELD,\n  REQUEST_CATS_PENDING,\n  REQUEST_CATS_SUCCESS,\n  REQUEST_CATS_FAILED\n} from \"../constants\";\n\nimport { Dispatch } from \"redux\";\n\n//----------------------------------------------------//\n//----------------------------------------------------//\n\nexport const setSearchField = (text: string) => ({\n  type: CHANGE_SEARCH_FIELD,\n  payload: text\n});\n\n//----------------------------------------------------//\n\nconst requestCatsPending = () => ({\n  type: REQUEST_CATS_PENDING\n});\n\nconst requestCatsSuccess = (cats: []) => ({\n  type: REQUEST_CATS_SUCCESS,\n  payload: cats\n});\n\nconst requestCatsFailed = (error: any) => ({\n  type: REQUEST_CATS_FAILED,\n  payload: error\n});\n\nexport const requestCats = () => (dispatch: Dispatch) => {\n  dispatch(requestCatsPending());\n  fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then(response => response.json())\n    .then(cats => dispatch(requestCatsSuccess(cats)))\n    .catch(error => dispatch(requestCatsFailed(error)));\n};\n","import React from \"react\";\n\nimport { connect } from \"react-redux\";\n\n//-- Actions --//\nimport { setSearchField } from \"../actions/action\";\n\n//-- Type --//\nimport { Dispatch } from \"redux\";\n\n//----------------------------------------------------//\n//----------------------------------------------------//\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  onSearchChange: (e: any) => dispatch(setSearchField(e.target.value))\n});\n\ninterface Props {\n  onSearchChange: any;\n}\n\nconst SearchBox: React.SFC<Props> = ({ onSearchChange }) => (\n  <div className=\"pa2\">\n    <input\n      aria-label=\"Search Cats\"\n      className=\"pa3 ba b--green bg-lightest-blue\"\n      type=\"text\"\n      placeholder=\"Search\"\n      onChange={onSearchChange}\n    />\n  </div>\n);\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(SearchBox);\n","import React from \"react\";\n\n//----------------------------------------------------//\n//----------------------------------------------------//\n\ntype Props = {\n  children?: JSX.Element\n}\n\nconst Scroll = (props: Props) => (\n  <div\n    style={{ overflow: \"scroll\", border: \"5px solid black\", height: \"500px\" }}\n  >\n    {props.children}\n  </div>\n);\n\nexport default Scroll;\n","import React from \"react\";\n\n//----------------------------------------------------//\n//----------------------------------------------------//\n\ninterface IAppProps {}\n\ninterface IAppState {\n  hasError: boolean;\n}\n\nclass ErrorBoundry extends React.Component<IAppProps, IAppState> {\n  state = {\n    hasError: false\n  };\n\n  componentDidCatch(error: any, info: any) {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    return this.state.hasError ? (\n      <h1>Oops. Something went wrong !</h1>\n    ) : (\n      this.props.children\n    );\n  }\n}\n\nexport default ErrorBoundry;\n","import React from \"react\";\n\n//-- Components --//\nimport Header from \"../components/Header\";\nimport CardList from \"../components/CardList\";\nimport SearchBox from \"../components/SearchBox\";\nimport Scroll from \"../components/Scroll\";\nimport ErrorBoundry from \"../components/ErrorBoundry\";\n\n//-- Styles --//\nimport \"./App.css\";\n\n//----------------------------------------------------//\n//----------------------------------------------------//\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"tc\">\n      <Header />\n      <SearchBox />\n      <Scroll>\n        <ErrorBoundry>\n          <CardList />\n        </ErrorBoundry>\n      </Scroll>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { Provider } from \"react-redux\";\n\nimport \"tachyons\";\n\n//-- Stores --//\nimport { store } from \"./store/configureStore\";\n\n//-- Components --//\nimport App from \"./containers/App\";\n\n//-- Styles --//\nimport \"./index.css\";\n\n//-- Service Worker --//\nimport * as serviceWorker from \"./serviceWorker\";\n\n//----------------------------------------------------//\n//----------------------------------------------------//\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}