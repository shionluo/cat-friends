{"version":3,"sources":["reducer.js","components/Header.jsx","components/Card.jsx","components/CardList.jsx","action.js","constants.js","components/SearchBox.jsx","components/Scroll.jsx","components/ErrorBoundry.jsx","containers/App.jsx","index.js"],"names":["initialSearchField","searchField","initialCats","cats","isPending","error","Header","className","React","Component","Card","id","name","email","src","alt","connect","state","requestCats","searchCats","dispatch","type","fetch","then","response","json","payload","catch","useEffect","filterCats","filter","cat","toLowerCase","includes","map","key","onSearchChange","e","target","value","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundry","hasError","info","this","setState","App","logger","createLogger","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d9418daf.chunk.js","sourcesContent":["//-- Constants --//\nimport {\n  CHANGE_SEARCH_FIELD,\n  REQUEST_CATS_PENDING,\n  REQUEST_CATS_SUCCESS,\n  REQUEST_CATS_FAILED\n} from \"./constants\";\n\n//----------------------------------------------------//\n//----------------------------------------------------//\n\nconst initialSearchField = {\n  searchField: \"\"\n};\n\nexport const searchCats = (state = initialSearchField, action = {}) => {\n  switch (action.type) {\n    case CHANGE_SEARCH_FIELD:\n      return {\n        ...state,\n        searchField: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\n//----------------------------------------------------//\n\nconst initialCats = {\n  cats: [],\n  isPending: false,\n  error: \"\"\n};\n\nexport const requestCats = (state = initialCats, action = {}) => {\n  switch (action.type) {\n    case REQUEST_CATS_PENDING:\n      return {\n        ...state,\n        isPending: true\n      };\n    case REQUEST_CATS_SUCCESS:\n      return {\n        ...state,\n        cats: action.payload,\n        isPending: false\n      };\n    case REQUEST_CATS_FAILED:\n      return {\n        ...state,\n        error: action.payload,\n        isPending: false\n      };\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\n\n//----------------------------------------------------//\n//----------------------------------------------------//\n\nclass Header extends React.Component {\n  render() {\n    return <h1 className=\"f1\">Cat Friends</h1>;\n  }\n}\n\nexport default Header;\n","import React from \"react\";\n\n//----------------------------------------------------//\n//----------------------------------------------------//\n\nconst Card = ({ id, name, email }) => (\n  <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\n    <img src={`https://robohash.org/${id}?set=set4&size=250x250`} alt=\"cat\" />\n    <div>\n      <h2>{name}</h2>\n      <p>{email}</p>\n    </div>\n  </div>\n);\n\nexport default Card;\n","import React, { useEffect } from \"react\";\n\nimport { connect } from \"react-redux\";\n\n//-- Actions --//\nimport { requestCats } from \"../action\";\n\n//-- Components --//\nimport Card from \"./Card\";\n\n//----------------------------------------------------//\n//----------------------------------------------------//\n\nconst mapStateToProps = state => ({\n  cats: state.requestCats.cats,\n  isPending: state.requestCats.isPending,\n  searchField: state.searchCats.searchField\n});\n\nconst mapDispatchToProps = dispatch => ({\n  requestCats: () => dispatch(requestCats())\n});\n\nconst CardList = ({ cats, isPending, searchField, requestCats }) => {\n  useEffect(() => {\n    requestCats();\n  }, [requestCats]);\n\n  const filterCats = cats.filter(cat =>\n    cat.name.toLowerCase().includes(searchField.toLowerCase())\n  );\n\n  return isPending ? (\n    <h1 className=\"tc\">Loading ...</h1>\n  ) : (\n    <div>\n      {filterCats.map(cat => (\n        <Card key={cat.id} {...cat} />\n      ))}\n    </div>\n  );\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CardList);\n","//-- Constants --//\nimport {\n  CHANGE_SEARCH_FIELD,\n  REQUEST_CATS_PENDING,\n  REQUEST_CATS_SUCCESS,\n  REQUEST_CATS_FAILED\n} from \"./constants\";\n\n//----------------------------------------------------//\n//----------------------------------------------------//\n\nexport const setSearchField = text => ({\n  type: CHANGE_SEARCH_FIELD,\n  payload: text\n});\n\n//----------------------------------------------------//\n\nexport const requestCats = () => dispatch => {\n  dispatch({ type: REQUEST_CATS_PENDING });\n  fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then(response => response.json())\n    .then(cats => dispatch({ type: REQUEST_CATS_SUCCESS, payload: cats }))\n    .catch(error => dispatch({ type: REQUEST_CATS_FAILED, payload: error }));\n};\n","export const CHANGE_SEARCH_FIELD = \"CHANGE_SEARCH_FIELD\";\n\nexport const REQUEST_CATS_PENDING = \"REQUEST_CATS_PENDING\";\nexport const REQUEST_CATS_SUCCESS = \"REQUEST_CATS_SUCCESS\";\nexport const REQUEST_CATS_FAILED = \"REQUEST_CATS_FAILED\";\n","import React from \"react\";\n\nimport { connect } from \"react-redux\";\n\n//-- Actions --//\nimport { setSearchField } from \"../action\";\n\n//----------------------------------------------------//\n//----------------------------------------------------//\n\nconst mapDispatchToProps = dispatch => ({\n  onSearchChange: e => dispatch(setSearchField(e.target.value))\n});\n\nconst SearchBox = ({ onSearchChange }) => (\n  <div className=\"pa2\">\n    <input\n      className=\"pa3 ba b--green bg-lightest-blue\"\n      type=\"text\"\n      placeholder=\"Search\"\n      onChange={onSearchChange}\n    />\n  </div>\n);\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(SearchBox);\n","import React from \"react\";\n\n//----------------------------------------------------//\n//----------------------------------------------------//\n\nconst Scroll = props => (\n  <div\n    style={{ overflow: \"scroll\", border: \"5px solid black\", height: \"500px\" }}\n  >\n    {props.children}\n  </div>\n);\n\nexport default Scroll;\n","import React from \"react\";\n\n//----------------------------------------------------//\n//----------------------------------------------------//\n\nclass ErrorBoundry extends React.Component {\n  state = {\n    hasError: false\n  };\n\n  componentDidCatch(error, info) {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    return this.state.hasError ? (\n      <h1>Oops. Something went wrong !</h1>\n    ) : (\n      this.props.children\n    );\n  }\n}\n\nexport default ErrorBoundry;\n","import React from \"react\";\n\n//-- Components --//\nimport Header from \"../components/Header\";\nimport CardList from \"../components/CardList\";\nimport SearchBox from \"../components/SearchBox\";\nimport Scroll from \"../components/Scroll\";\nimport ErrorBoundry from \"../components/ErrorBoundry\";\n\n//-- Styles --//\nimport \"./App.css\";\n\n//----------------------------------------------------//\n//----------------------------------------------------//\n\nconst App = () => {\n  return (\n    <div className=\"tc\">\n      <Header />\n      <SearchBox />\n      <Scroll>\n        <ErrorBoundry>\n          <CardList />\n        </ErrorBoundry>\n      </Scroll>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\n\nimport { createLogger } from \"redux-logger\";\nimport thunkMiddleware from \"redux-thunk\";\n\nimport \"tachyons\";\n\n//-- Reducer --//\nimport { searchCats, requestCats } from \"./reducer\";\n\n//-- Components --//\nimport App from \"./containers/App\";\n\n//-- Styles --//\nimport \"./index.css\";\n\n//----------------------------------------------------//\n//----------------------------------------------------//\n\nconst logger = createLogger();\nconst rootReducer = combineReducers({ searchCats, requestCats });\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(thunkMiddleware, logger)\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}